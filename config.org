* My emacs config

** Install packages
   #+begin_src emacs-lisp
     (require 'package)
     (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))

     (when (not package-archive-contents)
       (package-refresh-contents))
     ;; install use-package if it's not installed
     (unless (package-installed-p 'use-package)
       (package-install 'use-package))

     ;; always ensure packages are installed
     (require 'use-package-ensure)
     (setq use-package-always-ensure t)

     ;; appearance
     (use-package modus-themes
       :init
       (setq modus-themes-slanted-constructs t
	     modus-themes-bold-constructs t)
       (modus-themes-load-themes)
       :config
       (modus-themes-load-operandi))

     ;; programming

     (use-package go-mode)
     (use-package python-mode)
     (use-package pydoc)
     (use-package company) ;; for completion
     (use-package reformatter)
     (use-package eglot) ;; lsp client
     (use-package emmet-mode)
     (use-package magit) ; an interface to git
     (use-package htmlize)
     (use-package windresize)



     ;; misc
     (use-package markdown-mode)

   #+end_src
  
** Quality of life
#+begin_src emacs-lisp
  (setq inhibit-startup-message t)

  ;; disable tool, menu and scroll bar
  (tool-bar-mode -1)
  (menu-bar-mode -1)
  (scroll-bar-mode -1)

  ;; function to reload configuration
  (defun config-reload ()
      (interactive)
      (org-babel-load-file (expand-file-name "~/.config/emacs/config.org"))
      ) 

  ;; refresh buffer when file is modified on disk
  (global-auto-revert-mode 1)

  ;; font
  (add-to-list 'default-frame-alist
	       '(font . "Hack-14"))

  (put 'dired-find-alternate-file 'disabled nil)

  (setq backup-directory-alist '(("." . "~/.bak"))
	backup-by-copying t    
	version-control t      
	delete-old-versions t  
	kept-new-versions 5   
	kept-old-versions 2    
	)
#+end_src

** Productivity
#+begin_src emacs-lisp
  (setq org-todo-keywords
	'((sequence "TODO" "DOING" "WAITING" "|" "DONE" )))

  (setq org-todo-keyword-faces
	'(("TODO" . "#a4202a")
	  ("DOING" . org-warning)
	  ("WAITING" . "#dbbe5f")
	  ))

  ;; Colors are from https://protesilaos.com/emacs/modus-themes-colors

#+end_src
** Writing
*** Spellcheck
    #+begin_src emacs-lisp
      (setq ispell-program-name "aspell")
      (setq ispell-personal-dictionary "~/.config/.aspell.en.pws")
      ;; enable spellcheck in text-modes
      (add-hook 'text-mode-hook 'flyspell-mode)
      ;; enable spellcheck for comments in prog-mode
      (add-hook 'prog-mode-hook 'flyspell-prog-mode)

    #+end_src
** Programming
*** Code formatting
    #+begin_src emacs-lisp
      (require 'reformatter)
      ;; go
      (setq go-format-command "gofmt")
      (reformatter-define go-format
	:program go-format-command
	:lighter " GF")

      ;; py

      (setq py-format-command "black")
      (reformatter-define py-format
	:program py-format-command
	:args '("-")
	:lighter " PF")

      ;; c 
      (setq c-format-command "cfmt")
      (reformatter-define c-format
	:program c-format-command
	:args '("format")
	:lighter " CF")

      (org-babel-do-load-languages
       'org-babel-load-languages
       '((python . t)))

      ;; hooks
      (add-hook 'go-mode-hook 'go-format-on-save-mode)
      (add-hook 'python-mode-hook 'py-format-on-save-mode)
    #+end_src
*** LSP
    #+begin_src emacs-lisp
      (add-hook 'prog-mode-hook 'company-mode)
      (add-hook 'python-mode-hook 'eglot-ensure)
      (add-hook 'go-mode-hook 'eglot-ensure)
      (add-hook 'js-mode-hook 'eglot-ensure)
    #+end_src
** Global Keybindings
   #+begin_src emacs-lisp
     (global-set-key (kbd "C-c c") 'org-capture)
     (global-set-key (kbd "C-c r") 'config-reload)
     (global-set-key (kbd "M-<f2>") 'modus-themes-toggle) ; toggle light and dark modus themes
     (global-unset-key (kbd "C-z"))
     (global-set-key (kbd "C-x g") 'magit-status)
   #+end_src


